var documenterSearchIndex = {"docs":
[{"location":"multiindexsets/#Multi-Index-Sets","page":"Multi-Index Sets","title":"Multi Index Sets","text":"","category":"section"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"Multi-index sets the standard Smolyak construction are easily constructed. Suppose we consider a function u with domain GammainR^n. The multi-index set $ {\\alpha : \\Vert \\alpha \\Vert_1 \\leq n + d} \\subset \\N^{2} $ is constructed using the following syntax.","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"using SparseGridsKit\n\nn, k = 2, 1\nmi_set = create_smolyak_miset(n, k)","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"The multi-index set can be viewed a vector of Vector{Integer} representing each multi-index:","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"get_mi(mi_set)","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"The multi-index set can be altered by adding additional multi-indices.","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"mi_set_new = MISet([[1,3]]) \ncombined_mi_set = add_mi(mi_set, mi_set_new)","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"In Gerstnerâ€“Griebel style algorithms, the margin and reduced margin are often required. These are easily computed. For example the margin,","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"margin_set = get_margin(combined_mi_set)","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"and the reduced margin,","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"reduced_margin_set = get_reduced_margin(combined_mi_set)","category":"page"},{"location":"multiindexsets/","page":"Multi-Index Sets","title":"Multi-Index Sets","text":"Notice how the multi-index 14 is in the margin but not the reduced margin.","category":"page"},{"location":"reference/#Functions","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"reference/#Index","page":"Reference","title":"Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"reference/#Functions-2","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [SparseGridsKit]","category":"page"},{"location":"reference/#SparseGridsKit.add_mi-Tuple{MISet, MISet}","page":"Reference","title":"SparseGridsKit.add_mi","text":"add_mi(mi_set, mi_set_new)\n\nAdds a new set of multi-indices (mi_set_new) to an existing multi-index set (mi_set).\n\nArguments\n\nmi_set: The original multi-index set.\nmi_set_new: A new MISet to be added to the original.\n\nReturns\n\nA new MISet containing the combined and sorted multi-indices.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.add_mi-Tuple{MISet, Vector}","page":"Reference","title":"SparseGridsKit.add_mi","text":"add_mi(mi_set, mi_new)\n\nAdds a single new multi-index (mi_new) to an existing multi-index set (mi_set).\n\nArguments\n\nmi_set: The original multi-index set.\nmi_new: A new multi-index vector to be added.\n\nReturns\n\nA new MISet containing the updated and sorted multi-indices.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.create_smolyak_miset-Tuple{Any, Any}","page":"Reference","title":"SparseGridsKit.create_smolyak_miset","text":"create_smolyak_miset(n, k)\n\nCreates a Smolyak multi-index set for a given dimension (n) and level (k).\n\nArguments\n\nn: The dimensionality of the space.\nk: The level of the Smolyak grid.\n\nReturns\n\nAn MISet representing the Smolyak multi-index set.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.create_sparsegrid-Tuple{Any}","page":"Reference","title":"SparseGridsKit.create_sparsegrid","text":"create_sparsegrid(mi_set)\n\nCreates a sparse grid based on the provided multi-index set (mi_set).\n\nArguments\n\nmi_set: An instance of MISet containing the multi-index set for grid construction.\n\nReturns\n\nA sparse grid object constructed using the specified multi-index set.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_grid_points-Tuple{Any}","page":"Reference","title":"SparseGridsKit.get_grid_points","text":"get_grid_points(sg)\n\nRetrieves the grid points from a sparse grid (sg).\n\nArguments\n\nsg: A sparse grid object.\n\nReturns\n\nA vector of vectors, where each inner vector represents a grid point.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_margin-Tuple{MISet}","page":"Reference","title":"SparseGridsKit.get_margin","text":"get_margin(mi_set)\n\nCalculates the margin of a multi-index set (mi_set), which is the set of multi-indices that can extend the current set.\n\nArguments\n\nmi_set: An instance of MISet.\n\nReturns\n\nAn MISet containing the margin set.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_mi-Tuple{MISet}","page":"Reference","title":"SparseGridsKit.get_mi","text":"get_mi(mi_set)\n\nRetrieves the list of multi-indices from a given MISet.\n\nArguments\n\nmi_set: An instance of MISet.\n\nReturns\n\nA vector of multi-index vectors.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_mi_set-Tuple{Any}","page":"Reference","title":"SparseGridsKit.get_mi_set","text":"get_mi_set(sg)\n\nGenerates a downwards-closed set of multi-indices from a sparse grid (sg).\n\nArguments\n\nsg: A sparse grid object.\n\nReturns\n\nAn MISet containing the downwards-closed set of multi-indices.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_n_grid_points-Tuple{Any}","page":"Reference","title":"SparseGridsKit.get_n_grid_points","text":"get_n_grid_points(sg)\n\nReturns the number of grid points in the sparse grid (sg).\n\nArguments\n\nsg: A sparse grid object.\n\nReturns\n\nThe number of grid points in the sparse grid.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_n_mi-Tuple{MISet}","page":"Reference","title":"SparseGridsKit.get_n_mi","text":"get_n_mi(mi_set)\n\nReturns the number of multi-indices in a given MISet.\n\nArguments\n\nmi_set: An instance of MISet.\n\nReturns\n\nThe number of multi-indices in the set.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.get_reduced_margin-Tuple{MISet}","page":"Reference","title":"SparseGridsKit.get_reduced_margin","text":"get_reduced_margin(mi_set)\n\nCalculates the reduced margin of a multi-index set (mi_set), which removes indices already in the set.\n\nArguments\n\nmi_set: An instance of MISet.\n\nReturns\n\nAn MISet containing the reduced margin set.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.integrate_L2_on_sparsegrid-Tuple{Any, Any, Any}","page":"Reference","title":"SparseGridsKit.integrate_L2_on_sparsegrid","text":"integrate_L2_on_sparsegrid(sg, f_on_grid, precomputed_lagrange_integrals; product=dot, precomputed_pairwise_norms=nothing)\n\nComputes the L2 norm of a function (f_on_grid) over a sparse grid (sg) using precomputed integrals.\n\nArguments\n\nsg: The sparse grid.\nf_on_grid: A vector of function values on the sparse grid.\nprecomputed_lagrange_integrals: Precomputed Lagrange integrals.\nproduct: A function to compute the inner product (default is dot).\nprecomputed_pairwise_norms: Optional precomputed norms for optimization.\n\nReturns\n\nThe L2 norm of the function over the sparse grid.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.integrate_on_sparsegrid-Tuple{Any, Any, Any}","page":"Reference","title":"SparseGridsKit.integrate_on_sparsegrid","text":"integrate_on_sparsegrid(sg, f_on_grid, precomputed_lagrange_integrals)\n\nIntegrates a function (f_on_grid) over a sparse grid (sg) using precomputed Lagrange integrals.\n\nArguments\n\nsg: The sparse grid for integration.\nf_on_grid: A vector of function values on the sparse grid.\nprecomputed_lagrange_integrals: A vector of precomputed Lagrange integrals.\n\nReturns\n\nThe integral of the function over the sparse grid.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.interpolate_on_sparsegrid-Tuple{Any, Any, Any}","page":"Reference","title":"SparseGridsKit.interpolate_on_sparsegrid","text":"interpolate_on_sparsegrid(sg, f_on_grid, target_points)\n\nInterpolates a function (f_on_grid) defined on a sparse grid (sg) to a set of target points.\n\nArguments\n\nsg: The source sparse grid.\nf_on_grid: A vector of function values on the sparse grid.\ntarget_points: A vector of target points for interpolation.\n\nReturns\n\nA vector of interpolated values at the target points.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.map_from_to-Tuple{Any, Any}","page":"Reference","title":"SparseGridsKit.map_from_to","text":"map_from_to(sg_from, sg_to)\n\nMaps data from one sparse grid (sg_from) to another (sg_to).\n\nArguments\n\nsg_from: The source sparse grid.\nsg_to: The target sparse grid.\n\nReturns\n\nA vector that maps data from sg_from to sg_to.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.precompute_lagrange_integrals-Tuple{Any}","page":"Reference","title":"SparseGridsKit.precompute_lagrange_integrals","text":"precompute_lagrange_integrals(max_mi)\n\nPrecomputes the product integrals for Lagrange basis functions up to a given maximum multi-index (max_mi).\n\nArguments\n\nmax_mi: The maximum multi-index for which to precompute integrals.\n\nReturns\n\nA vector of precomputed product integrals for the Lagrange basis.\n\n\n\n\n\n","category":"method"},{"location":"reference/#SparseGridsKit.precompute_pairwise_norms-Tuple{Any, Any}","page":"Reference","title":"SparseGridsKit.precompute_pairwise_norms","text":"precompute_pairwise_norms(f_on_grid, product)\n\nPrecomputes pairwise norms for function values (f_on_grid) using a specified product function.\n\nArguments\n\nf_on_grid: A vector of function values on the sparse grid.\nproduct: A function to compute the product between pairs of function values.\n\nReturns\n\nA matrix of pairwise norms.\n\n\n\n\n\n","category":"method"},{"location":"#SparseGridsKit","page":"SparseGridsKit","title":"SparseGridsKit","text":"","category":"section"}]
}
